if windows
{
    Compiler      cl
    Compiler.Flags /EHsc /W4 /wd4100 /wd4267 /wd4706 /wd4702 /wd4244 /GR- /Zc:__cplusplus
}
else
{
    Compiler.Flags -std=c++11 -Wno-deprecated
}

if windows
{
    Defines _CRT_SECURE_NO_WARNINGS

    Defines NOMINMAX  # windows.h defines min() and max() which conflict with std::min()
                      # and std::max(), which both might be used in sources. Avoid compile
                      # errors by telling windows.h to not define those two.
}

Type:lib static_lib

SourceDirectory       src
BuildDirectory        bin/%%lib
IntermediateDirectory bin-int/%%lib

CoreFiles
[
	src/build_log.cc
	src/build.cc
	src/clean.cc
	src/clparser.cc
	src/dyndep.cc
	src/dyndep_parser.cc
	src/debug_flags.cc
	src/deps_log.cc
	src/depfile_parser.cc
	src/disk_interface.cc
	src/edit_distance.cc
	src/elide_middle.cc
	src/eval_env.cc
	src/graph.cc
	src/graphviz.cc
	src/jobserver.cc
	src/json.cc
	src/lexer.cc
	src/line_printer.cc
	src/manifest_parser.cc
	src/metrics.cc
	src/missing_deps.cc
	src/parser.cc
	src/state.cc
     src/status.cc
	src/status_printer.cc
	src/string_piece_util.cc
	src/util.cc
	src/version.cc
	src/real_command_runner.cc
]

CoreFiles:windows
[
    src/subprocess-win32.cc
    src/includes_normalize-win32.cc
    src/jobserver-win32.cc
    src/msvc_helper-win32.cc
    src/msvc_helper_main-win32.cc
    src/getopt.c
    src/minidump-win32.cc
    windows/ninja.manifest
]

CoreFiles:!windows
[
    src/jobserver-posix.cc
    src/subprocess-posix.cc
]

SourceFiles:lib  $CoreFiles
SourceFiles:!lib $CoreFiles src/ninja.cc 

.Help
{
    To build the ninja binary,  just run: riftbuild
    To build the ninja library, just run: riftbuild lib
}

option.lib
{
    description Build the ninja library
}
